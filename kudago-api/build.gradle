plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'edu.java'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

tasks.register('prepareKotlinBuildScriptModel') {

}

jacoco {
    toolVersion = '0.8.12'
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, excludes: ['**/dtos/**'])
        })
    }
}

build {
    dependsOn jacocoTestReport
}

dependencies {
    //web
    implementation'org.springframework.boot:spring-boot-starter-web'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.3.4'
    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-openfeign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.3'

    //tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // https://mvnrepository.com/artifact/org.assertj/assertj-core
    testImplementation 'org.assertj:assertj-core:3.26.3'
    // https://mvnrepository.com/artifact/org.testcontainers/junit-jupiter
    testImplementation 'org.testcontainers:junit-jupiter:1.20.2'
    // https://mvnrepository.com/artifact/org.wiremock.integrations.testcontainers/wiremock-testcontainers-module
    implementation 'org.wiremock.integrations.testcontainers:wiremock-testcontainers-module:1.0-alpha-14'
    // https://mvnrepository.com/artifact/org.testcontainers/postgresql
    testImplementation 'org.testcontainers:postgresql:1.20.3'

    //utils
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    // https://mvnrepository.com/artifact/org.modelmapper/modelmapper
    implementation 'org.modelmapper:modelmapper:3.2.1'
    implementation project(':custom-aspect-starter')

    //validation
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.3.4'

    //logging
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-log4j2
    implementation 'org.springframework.boot:spring-boot-starter-log4j2:3.3.4'

    //database
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.4'
    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation 'org.postgresql:postgresql:42.7.4'
    // https://mvnrepository.com/artifact/org.liquibase/liquibase-core
    implementation 'org.liquibase:liquibase-core:4.29.2'

    //security
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    implementation 'org.springframework.boot:spring-boot-starter-security:3.3.5'
    // https://mvnrepository.com/artifact/com.nimbusds/nimbus-jose-jwt
    implementation 'com.nimbusds:nimbus-jose-jwt:9.45'
    // https://mvnrepository.com/artifact/com.j256.two-factor-auth/two-factor-auth
    implementation 'com.j256.two-factor-auth:two-factor-auth:1.3'
    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-crypto
    implementation 'org.springframework.security:spring-security-crypto:6.3.4'

}

configurations.configureEach {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

test {
    useJUnitPlatform()
}
