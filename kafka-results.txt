# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: C:\Users\nikit\.jdks\openjdk-21\bin\java.exe
# VM options: -Dfile.encoding=windows-1251 -Duser.country=RU -Duser.language=ru -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: edu.java.mqbenchmark.KafkaBenchmarkTest.stressTest

# Run progress: 0,00% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: 0,789 ops/s
# Warmup Iteration   2: 0,928 ops/s
# Warmup Iteration   3: 0,916 ops/s
Iteration   1: 0,917 ops/s
Iteration   2: 0,917 ops/s
Iteration   3: 0,916 ops/s
Iteration   4: 0,930 ops/s
Iteration   5: 0,912 ops/s
Iteration   6: 0,917 ops/s
Iteration   7: 0,918 ops/s
Iteration   8: 0,911 ops/s
Iteration   9: 0,927 ops/s
Iteration  10: 0,915 ops/s


Result "edu.java.mqbenchmark.KafkaBenchmarkTest.stressTest":
  0,918 ±(99.9%) 0,009 ops/s [Average]
  (min, avg, max) = (0,911, 0,918, 0,930), stdev = 0,006
  CI (99.9%): [0,909, 0,927] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: C:\Users\nikit\.jdks\openjdk-21\bin\java.exe
# VM options: -Dfile.encoding=windows-1251 -Duser.country=RU -Duser.language=ru -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: edu.java.mqbenchmark.KafkaBenchmarkTest.testLoadBalancing

# Run progress: 20,00% complete, ETA 00:01:03
# Fork: 1 of 1
# Warmup Iteration   1: 2,574 ops/s
# Warmup Iteration   2: 3,082 ops/s
# Warmup Iteration   3: 3,056 ops/s
Iteration   1: 3,094 ops/s
Iteration   2: 3,059 ops/s
Iteration   3: 3,047 ops/s
Iteration   4: 3,041 ops/s
Iteration   5: 3,070 ops/s
Iteration   6: 3,055 ops/s
Iteration   7: 3,049 ops/s
Iteration   8: 3,032 ops/s
Iteration   9: 3,026 ops/s
Iteration  10: 3,053 ops/s


Result "edu.java.mqbenchmark.KafkaBenchmarkTest.testLoadBalancing":
  3,053 ±(99.9%) 0,029 ops/s [Average]
  (min, avg, max) = (3,026, 3,053, 3,094), stdev = 0,019
  CI (99.9%): [3,024, 3,082] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: C:\Users\nikit\.jdks\openjdk-21\bin\java.exe
# VM options: -Dfile.encoding=windows-1251 -Duser.country=RU -Duser.language=ru -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: edu.java.mqbenchmark.KafkaBenchmarkTest.testLoadBalancingMultipleConsumers

# Run progress: 40,00% complete, ETA 00:00:51
# Fork: 1 of 1
# Warmup Iteration   1: 2,610 ops/s
# Warmup Iteration   2: 3,080 ops/s
# Warmup Iteration   3: 3,050 ops/s
Iteration   1: 3,058 ops/s
Iteration   2: 3,056 ops/s
Iteration   3: 3,055 ops/s
Iteration   4: 3,047 ops/s
Iteration   5: 3,064 ops/s
Iteration   6: 3,051 ops/s
Iteration   7: 3,062 ops/s
Iteration   8: 3,069 ops/s
Iteration   9: 3,051 ops/s
Iteration  10: 3,087 ops/s


Result "edu.java.mqbenchmark.KafkaBenchmarkTest.testLoadBalancingMultipleConsumers":
  3,060 ±(99.9%) 0,017 ops/s [Average]
  (min, avg, max) = (3,047, 3,060, 3,087), stdev = 0,012
  CI (99.9%): [3,043, 3,077] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: C:\Users\nikit\.jdks\openjdk-21\bin\java.exe
# VM options: -Dfile.encoding=windows-1251 -Duser.country=RU -Duser.language=ru -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: edu.java.mqbenchmark.KafkaBenchmarkTest.testMultipleConsumers

# Run progress: 60,00% complete, ETA 00:00:35
# Fork: 1 of 1
# Warmup Iteration   1: 2,563 ops/s
# Warmup Iteration   2: 3,055 ops/s
# Warmup Iteration   3: 3,064 ops/s
Iteration   1: 3,049 ops/s
Iteration   2: 3,060 ops/s
Iteration   3: 3,038 ops/s
Iteration   4: 3,056 ops/s
Iteration   5: 3,040 ops/s
Iteration   6: 3,028 ops/s
Iteration   7: 3,057 ops/s
Iteration   8: 3,064 ops/s
Iteration   9: 3,061 ops/s
Iteration  10: 3,050 ops/s


Result "edu.java.mqbenchmark.KafkaBenchmarkTest.testMultipleConsumers":
  3,050 ±(99.9%) 0,018 ops/s [Average]
  (min, avg, max) = (3,028, 3,050, 3,064), stdev = 0,012
  CI (99.9%): [3,033, 3,068] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: C:\Users\nikit\.jdks\openjdk-21\bin\java.exe
# VM options: -Dfile.encoding=windows-1251 -Duser.country=RU -Duser.language=ru -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: edu.java.mqbenchmark.KafkaBenchmarkTest.testSimpleConfig

# Run progress: 80,00% complete, ETA 00:00:17
# Fork: 1 of 1
# Warmup Iteration   1: 7,538 ops/s
# Warmup Iteration   2: 9,095 ops/s
# Warmup Iteration   3: 9,175 ops/s
Iteration   1: 9,156 ops/s
Iteration   2: 9,204 ops/s
Iteration   3: 9,159 ops/s
Iteration   4: 9,166 ops/s
Iteration   5: 9,198 ops/s
Iteration   6: 9,148 ops/s
Iteration   7: 9,175 ops/s
Iteration   8: 9,140 ops/s
Iteration   9: 9,207 ops/s
Iteration  10: 9,142 ops/s


Result "edu.java.mqbenchmark.KafkaBenchmarkTest.testSimpleConfig":
  9,170 ±(99.9%) 0,038 ops/s [Average]
  (min, avg, max) = (9,140, 9,170, 9,207), stdev = 0,025
  CI (99.9%): [9,131, 9,208] (assumes normal distribution)


# Run complete. Total time: 00:01:26

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                               Mode  Cnt  Score   Error  Units
KafkaBenchmarkTest.stressTest                          thrpt   10  0,918 ± 0,009  ops/s
KafkaBenchmarkTest.testLoadBalancing                   thrpt   10  3,053 ± 0,029  ops/s
KafkaBenchmarkTest.testLoadBalancingMultipleConsumers  thrpt   10  3,060 ± 0,017  ops/s
KafkaBenchmarkTest.testMultipleConsumers               thrpt   10  3,050 ± 0,018  ops/s
KafkaBenchmarkTest.testSimpleConfig                    thrpt   10  9,170 ± 0,038  ops/s
