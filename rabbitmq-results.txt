# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: C:\Users\nikit\.jdks\openjdk-21\bin\java.exe
# VM options: -Dfile.encoding=windows-1251 -Duser.country=RU -Duser.language=ru -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: edu.java.mqbenchmark.RabbitmqBenchmarkTest.stressTest

# Run progress: 0,00% complete, ETA 00:01:05
# Fork: 1 of 1
# Warmup Iteration   1: 48,277 ops/s
# Warmup Iteration   2: 57,788 ops/s
# Warmup Iteration   3: 55,110 ops/s
Iteration   1: 60,138 ops/s
Iteration   2: 62,592 ops/s
Iteration   3: 62,231 ops/s
Iteration   4: 62,298 ops/s
Iteration   5: 59,780 ops/s
Iteration   6: 58,836 ops/s
Iteration   7: 60,521 ops/s
Iteration   8: 63,934 ops/s
Iteration   9: 64,430 ops/s
Iteration  10: 62,856 ops/s


Result "edu.java.mqbenchmark.RabbitmqBenchmarkTest.stressTest":
  61,762 ±(99.9%) 2,801 ops/s [Average]
  (min, avg, max) = (58,836, 61,762, 64,430), stdev = 1,853
  CI (99.9%): [58,960, 64,563] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: C:\Users\nikit\.jdks\openjdk-21\bin\java.exe
# VM options: -Dfile.encoding=windows-1251 -Duser.country=RU -Duser.language=ru -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: edu.java.mqbenchmark.RabbitmqBenchmarkTest.testLoadBalancing

# Run progress: 20,00% complete, ETA 00:00:57
# Fork: 1 of 1
# Warmup Iteration   1: 153,396 ops/s
# Warmup Iteration   2: 186,127 ops/s
# Warmup Iteration   3: 191,239 ops/s
Iteration   1: 197,264 ops/s
Iteration   2: 201,020 ops/s
Iteration   3: 202,361 ops/s
Iteration   4: 203,779 ops/s
Iteration   5: 203,620 ops/s
Iteration   6: 205,163 ops/s
Iteration   7: 196,503 ops/s
Iteration   8: 203,377 ops/s
Iteration   9: 199,210 ops/s
Iteration  10: 199,343 ops/s


Result "edu.java.mqbenchmark.RabbitmqBenchmarkTest.testLoadBalancing":
  201,164 ±(99.9%) 4,487 ops/s [Average]
  (min, avg, max) = (196,503, 201,164, 205,163), stdev = 2,968
  CI (99.9%): [196,677, 205,651] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: C:\Users\nikit\.jdks\openjdk-21\bin\java.exe
# VM options: -Dfile.encoding=windows-1251 -Duser.country=RU -Duser.language=ru -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: edu.java.mqbenchmark.RabbitmqBenchmarkTest.testLoadBalancingMultipleConsumers

# Run progress: 40,00% complete, ETA 00:00:42
# Fork: 1 of 1
# Warmup Iteration   1: 153,223 ops/s
# Warmup Iteration   2: 186,709 ops/s
# Warmup Iteration   3: 197,519 ops/s
Iteration   1: 197,060 ops/s
Iteration   2: 204,790 ops/s
Iteration   3: 201,739 ops/s
Iteration   4: 203,685 ops/s
Iteration   5: 205,522 ops/s
Iteration   6: 202,059 ops/s
Iteration   7: 204,710 ops/s
Iteration   8: 205,855 ops/s
Iteration   9: 206,278 ops/s
Iteration  10: 200,481 ops/s


Result "edu.java.mqbenchmark.RabbitmqBenchmarkTest.testLoadBalancingMultipleConsumers":
  203,218 ±(99.9%) 4,378 ops/s [Average]
  (min, avg, max) = (197,060, 203,218, 206,278), stdev = 2,896
  CI (99.9%): [198,840, 207,596] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: C:\Users\nikit\.jdks\openjdk-21\bin\java.exe
# VM options: -Dfile.encoding=windows-1251 -Duser.country=RU -Duser.language=ru -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: edu.java.mqbenchmark.RabbitmqBenchmarkTest.testMultipleConsumers

# Run progress: 60,00% complete, ETA 00:00:28
# Fork: 1 of 1
# Warmup Iteration   1: 154,736 ops/s
# Warmup Iteration   2: 184,662 ops/s
# Warmup Iteration   3: 194,533 ops/s
Iteration   1: 198,066 ops/s
Iteration   2: 195,446 ops/s
Iteration   3: 206,263 ops/s
Iteration   4: 198,247 ops/s
Iteration   5: 204,783 ops/s
Iteration   6: 205,535 ops/s
Iteration   7: 201,837 ops/s
Iteration   8: 203,086 ops/s
Iteration   9: 201,047 ops/s
Iteration  10: 183,771 ops/s


Result "edu.java.mqbenchmark.RabbitmqBenchmarkTest.testMultipleConsumers":
  199,808 ±(99.9%) 10,045 ops/s [Average]
  (min, avg, max) = (183,771, 199,808, 206,263), stdev = 6,644
  CI (99.9%): [189,763, 209,853] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: C:\Users\nikit\.jdks\openjdk-21\bin\java.exe
# VM options: -Dfile.encoding=windows-1251 -Duser.country=RU -Duser.language=ru -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: edu.java.mqbenchmark.RabbitmqBenchmarkTest.testSimpleConfig

# Run progress: 80,00% complete, ETA 00:00:14
# Fork: 1 of 1
# Warmup Iteration   1: 437,112 ops/s
# Warmup Iteration   2: 521,122 ops/s
# Warmup Iteration   3: 534,086 ops/s
Iteration   1: 547,391 ops/s
Iteration   2: 556,710 ops/s
Iteration   3: 559,373 ops/s
Iteration   4: 550,102 ops/s
Iteration   5: 547,935 ops/s
Iteration   6: 564,477 ops/s
Iteration   7: 546,258 ops/s
Iteration   8: 555,208 ops/s
Iteration   9: 542,336 ops/s
Iteration  10: 547,745 ops/s


Result "edu.java.mqbenchmark.RabbitmqBenchmarkTest.testSimpleConfig":
  551,753 ±(99.9%) 10,423 ops/s [Average]
  (min, avg, max) = (542,336, 551,753, 564,477), stdev = 6,894
  CI (99.9%): [541,331, 562,176] (assumes normal distribution)


# Run complete. Total time: 00:01:11

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                  Mode  Cnt    Score    Error  Units
RabbitmqBenchmarkTest.stressTest                          thrpt   10   61,762 ±  2,801  ops/s
RabbitmqBenchmarkTest.testLoadBalancing                   thrpt   10  201,164 ±  4,487  ops/s
RabbitmqBenchmarkTest.testLoadBalancingMultipleConsumers  thrpt   10  203,218 ±  4,378  ops/s
RabbitmqBenchmarkTest.testMultipleConsumers               thrpt   10  199,808 ± 10,045  ops/s
RabbitmqBenchmarkTest.testSimpleConfig                    thrpt   10  551,753 ± 10,423  ops/s
